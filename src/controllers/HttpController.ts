import { Response } from 'express'

/**
 * TODO
 */
export interface HttpController<
  GetById,
  GetByParams,
  PostRequest,
  PutRequest,
  DeleteRequest = Record<string, never>
> {
  /**
   * Return the model corresponding to the ID in the pathParams
   * @param req the request, uses type generated by openapi, for example {@link GetByIdReq}
   * @param res the response
   */
  getById?(req: GetById, res: Response): Promise<void>

  /**
   * Update and return the model corresponding to the ID in the pathParams, using the information in the body
   * @param req the request, uses type generated by openapi, for example {@link PutByIdReq}
   * @param res the response
   */
  updateById?(req: PutRequest, res: Response): Promise<void>

  /**
   * Create and return a model using the information in the body
   * @param req the request, uses type generated by openapi, for example {@link PostReq}
   * @param res the response
   */
  create?(req: PostRequest, res: Response): Promise<void>

  /**
   * Return a collection of the model, can be filtered with the queryParams
   * @param req the request, uses type generated by openapi, for example {@link GetByParamsReq}
   * @param res the response
   */
  getListByParams?(req: GetByParams, res: Response): Promise<void>

  /**
   * Delete the model corresponding to the ID in the pathParams
   * @param req the request, uses type generated by openapi, for example {@link DeleteByIdReq}
   * @param res the response
   */
  deleteById?(req: DeleteRequest, res: Response): Promise<void>
}
