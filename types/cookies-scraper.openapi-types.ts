/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/cookies": {
    /**
     * Your GET endpoint 
     * @description Fetch cookies from the url of a website present in path param.
     */
    get: operations["getCookies"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
  };
  responses: {
    /** @description Example response */
    CookieInfoList: {
      content: {
        "application/json": external["components/schemas/GeneralResponse.json"] & {
          data: {
            /** Format: uri */
            url: string;
            pagesAnalyzed: number;
            firstPartyCookies: (external["components/schemas/ScriptInfo.json"])[];
            thirdPartyCookies: (external["components/schemas/ScriptInfo.json"])[];
          };
        };
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export interface external {

  "components/schemas/CookieInfo.json": {
    name: string;
    value: string;
    duration: number;
    domain: string;
  }
  "components/schemas/GeneralResponse.json": {
    /**
     * @description The code of the response 
     * @example 200
     */
    code: number;
  }
  "components/schemas/ScriptInfo.json": {
    domain: string;
    cookies?: (external["components/schemas/CookieInfo.json"])[];
  }
}

export interface operations {

  getCookies: {
    /**
     * Your GET endpoint 
     * @description Fetch cookies from the url of a website present in path param.
     */
    parameters: {
        /** @description The url from where to fetch */
        /** @description The number of pages we want to fetch */
      query: {
        url: string;
        pagesNumber?: number;
      };
    };
    responses: {
      200: components["responses"]["CookieInfoList"];
    };
  };
}
